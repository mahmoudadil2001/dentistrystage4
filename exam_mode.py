import streamlit as st

def exam_mode_ui(questions, Links):
    st.title("ðŸŽ¯ ÙˆØ¶Ø¹ Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø±")

    if "exam_question_index" not in st.session_state:
        st.session_state.exam_question_index = 0
        st.session_state.exam_answers = [None] * len(questions)
        st.session_state.exam_finished = False

    index = st.session_state.exam_question_index
    q = questions[index]

    st.markdown(f"### Ø§Ù„Ø³Ø¤Ø§Ù„ {index + 1} Ù…Ù† {len(questions)}")
    st.write(q['question'])

    selected = st.radio("Ø§Ø®ØªØ± Ø§Ù„Ø¥Ø¬Ø§Ø¨Ø©", q["options"], key=f"exam_radio_{index}")

    if st.button("ØªØ£ÙƒÙŠØ¯ Ø§Ù„Ø¥Ø¬Ø§Ø¨Ø©"):
        st.session_state.exam_answers[index] = selected
        if index + 1 < len(questions):
            st.session_state.exam_question_index += 1
        else:
            st.session_state.exam_finished = True
        st.experimental_rerun()

    if st.session_state.exam_finished:
        st.success("ðŸŽ‰ Ø§Ù†ØªÙ‡Ù‰ Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø±!")

        correct_count = 0
        for i, q in enumerate(questions):
            ans = q.get("answer") or q.get("correct_answer")
            correct = q["options"][ans] if isinstance(ans, int) else ans
            if st.session_state.exam_answers[i] == correct:
                correct_count += 1

        st.write(f"âœ… Ø§Ù„Ø¯Ø±Ø¬Ø©: {correct_count} Ù…Ù† {len(questions)}")

        if st.button("Ø®Ø±ÙˆØ¬ Ù…Ù† ÙˆØ¶Ø¹ Ø§Ù„Ø§Ø®ØªØ¨Ø§Ø±"):
            st.session_state.exam_mode = False
            del st.session_state.exam_question_index
            del st.session_state.exam_answers
            del st.session_state.exam_finished
            st.experimental_rerun()

    if Links:
        st.markdown("---")
        for link in Links:
            st.markdown(f"- [{link['title']}]({link['url']})")
